// <auto-generated />
using System;
using HomeAnalytica.DataRegistry.Data.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace HomeAnalytica.DataRegistry.Data.Migrations
{
    [DbContext(typeof(DataRegistryDbContext))]
    partial class DataRegistryDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("HomeAnalytica.DataRegistry.Data.Entities.MeasuredQuantity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("description");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.HasKey("Id");

                    b.ToTable("measured_quantities", (string)null);
                });

            modelBuilder.Entity("HomeAnalytica.DataRegistry.Data.Entities.PhysicalUnit", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .HasColumnType("text")
                        .HasColumnName("description");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.Property<string>("Symbol")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("symbol");

                    b.HasKey("Id");

                    b.ToTable("physical_units", (string)null);
                });

            modelBuilder.Entity("HomeAnalytica.DataRegistry.Data.Entities.SensorDevice", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<string>("Description")
                        .HasColumnType("text")
                        .HasColumnName("description");

                    b.Property<DateTime?>("InstallationDate")
                        .HasColumnType("date")
                        .HasColumnName("installation_date");

                    b.Property<DateTime?>("LastMaintenance")
                        .HasColumnType("date")
                        .HasColumnName("last_maintenance");

                    b.Property<string>("Location")
                        .HasColumnType("text")
                        .HasColumnName("location");

                    b.Property<int>("MeasuredQuantityId")
                        .HasColumnType("integer")
                        .HasColumnName("measured_quantity_id");

                    b.Property<string>("Name")
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.Property<int>("PhysUnitId")
                        .HasColumnType("integer")
                        .HasColumnName("physical_unit_id");

                    b.Property<string>("SerialNo")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("serial_no");

                    b.Property<string>("Status")
                        .HasColumnType("text")
                        .HasColumnName("status");

                    b.HasKey("Id");

                    b.HasIndex("MeasuredQuantityId");

                    b.HasIndex("PhysUnitId");

                    b.ToTable("sensor_devices", (string)null);
                });

            modelBuilder.Entity("HomeAnalytica.DataRegistry.Data.Entities.SensorDevice", b =>
                {
                    b.HasOne("HomeAnalytica.DataRegistry.Data.Entities.MeasuredQuantity", "MeasuredQuantity")
                        .WithMany()
                        .HasForeignKey("MeasuredQuantityId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("FK_SensorDevice_MeasuredQuantity");

                    b.HasOne("HomeAnalytica.DataRegistry.Data.Entities.PhysicalUnit", "PhysUnit")
                        .WithMany()
                        .HasForeignKey("PhysUnitId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("FK_SensorDevice_PhysUnit");

                    b.Navigation("MeasuredQuantity");

                    b.Navigation("PhysUnit");
                });
#pragma warning restore 612, 618
        }
    }
}
