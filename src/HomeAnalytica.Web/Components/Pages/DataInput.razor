@page "/data-input"
@using HomeAnalytica.Common.Const
@using HomeAnalytica.Common.DTOs
@using HomeAnalytica.Web.Services
@rendermode InteractiveServer
@inject IHttpClientFactory HttpClientFactory
@inject ISensorDataService SensorDataService

<PageTitle>Counter</PageTitle>

<PageTitle>Data Input</PageTitle>

<h1>Data Input</h1>

<p role="status">Please enter your data:</p>

<div class="input-group mb-3">
    <span class="input-group-text">Temperature (°C)</span>
    <input @bind="temperature" type="number" class="form-control" step="0.1" />
</div>

<div class="input-group mb-3">
    <span class="input-group-text">Humidity (%)</span>
    <input @bind="humidity" type="number" class="form-control" step="1" />
</div>

<div class="input-group mb-3">
    <span class="input-group-text">Energy Consumption (kWh)</span>
    <input @bind="energyConsumption" type="number" class="form-control" step="0.1" />
</div>

<button class="btn btn-primary" @onclick="SubmitData">Submit Data</button>

@if (isDataSubmitted)

{
    <h3>Submitted Data:</h3>
    <ul>
        <li>Temperature: @temperature °C</li>
        <li>Humidity: @humidity %</li>
        <li>Energy Consumption: @energyConsumption kWh</li>
    </ul>
}

@code {



    private double temperature;

    private double humidity;

    private double energyConsumption;

    private bool isDataSubmitted = false;



    private async Task SubmitMetadata()
    {
        var data = new SensorDataDto
        {
            SensorType = SensorType.Temperature,

            Timestamp = DateTime.UtcNow,

            Value = temperature
        };

        var client = HttpClientFactory.CreateClient("YarpClient");

        var response = await client.PostAsJsonAsync("/data/submit", data);

        if (response.IsSuccessStatusCode)
        {
            isDataSubmitted = true;
        }
        else
        {

            // Handle error

        }
    }



    private async Task SubmitData()
    {
        var data = new SensorDataDto
        {
            SensorType = SensorType.Temperature,
            Timestamp = DateTime.UtcNow,
            Value = temperature
        };

        await SensorDataService.ProcessSensorDataAsync(data);
    }
}
